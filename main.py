import telebot
import requests
from telebot import types
from datetime import datetime

bot_token = '6310054769:AAFmc_juovAVh3bDUjU9b9ukxYsdqUOLCCs'
bot = telebot.TeleBot(bot_token)
channel_id = '@kdtdjtytyjtydtjydjtydjdty'
cart = {}
user_carts = {}

# –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
main_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
button_1 = types.KeyboardButton('üç£ –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
button_2 = types.KeyboardButton('üì± –ö–æ–Ω—Ç–∞–∫—Ç–∏')
checkout_back = types.KeyboardButton('üì¶ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
button_back = types.KeyboardButton('üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
button_cart = types.KeyboardButton('üõí –ö–æ—à–∏–∫')
empty_cart_button = types.KeyboardButton('üóëÔ∏è –û–ø—É—Å—Ç–æ—à–∏—Ç–∏ –∫–æ—à–∏–∫') 
main_markup.add(button_1, button_2, button_back, checkout_back, button_cart, empty_cart_button) 

food_choice_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
food_button = types.KeyboardButton('üçî —ó–∂–∞')
drink_button = types.KeyboardButton('üçπ –ù–∞–ø–æ—ó')
button_back = types.KeyboardButton('üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
food_choice_markup.add(food_button, drink_button, button_back)

# –ú–µ–Ω—é –∑—ñ —Å—Ç—Ä–∞–≤–∞–º–∏
order_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
dishes = {
    '–ö–µ–±–∞–±': {'price': 250, 'image_path': 'images/kebab.jpg', 'type': 'food'},
    '–®–∞—É—Ä–º–∞': {'price': 250, 'image_path': 'images/shaurma.jpg', 'type': 'food'},
    '–ë—É—Ä–≥–µ—Ä —Ç–µ–ª—è—Ç–∏–Ω–∞': {'price': 360, 'image_path': 'images/burger_telyatina.jpg', 'type': 'food'},

    '–ë—É—Ä–≥–µ—Ä –∫—É—Ä—è—Ç–∏–Ω–∞': {'price': 340, 'image_path': 'images/burger_chicken.jpg'},
    '–°–∞–ª–∞—Ç —Ñ—ñ—Ä–º–æ–≤–∏–π': {'price': 190, 'image_path': 'images/salad_firm.png'},
    '–¶–µ–∑–∞—Ä –∑ –∫—É—Ä–∫–æ—é': {'price': 240, 'image_path': 'images/caesar_chicken.jpg'},
    '–°–∞–ª–∞—Ç –≥—Ä–µ—Ü—å–∫–∏–π': {'price': 220, 'image_path': 'images/salad_greek.jpg'},
    '–ë–æ—Ä—â': {'price': 120, 'image_path': 'images/borscht.jpg'},
    # '–ö—É—Ä—è—á–∏–π –±—É–ª—å–π–æ–Ω': {'price': 100, 'image_path': 'images/chicken_soup.png'},
    # '–ü–∞—Å—Ç–∞ 1': {'price': 170, 'image_path': 'images/pasta_1.png'},
    # '–ü–∞—Å—Ç–∞ 2': {'price': 185, 'image_path': 'images/pasta_2.png'},

    '–ì–æ—Ä—ñ–ª–∫–∞ Nemiroff 40% Original 0,5 –ª.': {'price': 130, 'image_path': 'images/gor_nemyriv.jpg', 'type': 'drink'},
    '–ì–æ—Ä—ñ–ª–∫–∞ Nemiroff 40% Original 0,7 –ª.': {'price': 130, 'image_path': 'images/gor_nemyriv.jpg', 'type': 'drink'},
}

for dish in dishes:
    order_markup.add(types.KeyboardButton(dish))
button_back = types.KeyboardButton('üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')
order_markup.add(button_back)

# –ó–º—ñ–Ω–Ω–∞ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è –≤–∏–±—Ä–∞–Ω–æ—ó —Å—Ç—Ä–∞–≤–∏
selected_dish = None

@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–î–∞–≤–∞–π –∑—Ä–æ–±–∏–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è üòé', reply_markup=main_markup)


@bot.message_handler(func=lambda message: message.text == 'üç£ –ó—Ä–æ–±–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
def show_menu(message):
    bot.send_message(message.chat.id, 'üôÇ –í–∏–±–µ—Ä–∏ —Ç–∏–ø —Å—Ç—Ä–∞–≤: ', reply_markup=food_choice_markup)


@bot.message_handler(func=lambda message: message.text == 'üçî —ó–∂–∞')
def show_food_menu(message):
    for dish, details in dishes.items():
        if details.get('type') == 'food':
            photo_path = details['image_path']
            price = details['price']
            caption = f'{dish}: {price} –≥—Ä–Ω.'
            with open(photo_path, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=caption, reply_markup=create_add_to_cart_keyboard(dish))

@bot.message_handler(func=lambda message: message.text == 'üçπ –ù–∞–ø–æ—ó')
def show_drink_menu(message):
    for dish, details in dishes.items():
        if details.get('type') == 'drink':
            photo_path = details['image_path']
            price = details['price']
            caption = f'{dish}: {price} –≥—Ä–Ω.'
            with open(photo_path, 'rb') as photo:
                bot.send_photo(message.chat.id, photo, caption=caption, reply_markup=create_add_to_cart_keyboard(dish))

def create_add_to_cart_keyboard(dish):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(text="–î–æ–¥–∞—Ç–∏ –¥–æ –∫–æ—à–∏–∫–∞", callback_data=dish))
    return keyboard

@bot.message_handler(func=lambda message: message.text == 'üõí –ö–æ—à–∏–∫')
def view_cart(message):
    user_id = message.chat.id
    if user_id not in user_carts or not user_carts[user_id]:
        bot.send_message(user_id, '–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π.')
    else:
        # –í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
        delivery_cost = 370
        
        # –û–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –±–µ–∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç–∞–≤–∫–∏
        total_price_without_delivery = sum(dishes[dish]['price'] * quantity for dish, quantity in user_carts[user_id].items())
        
        # –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥–æ—Å—Ç–∞–≤–∫–∏ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏
        total_price_with_delivery = total_price_without_delivery + delivery_cost
        
        # –§–æ—Ä–º—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –≤–º—ñ—Å—Ç–æ–º –∫–æ—à–∏–∫–∞ —ñ –∑–∞–≥–∞–ª—å–Ω–æ—é —Å—É–º–æ—é
        cart_items = '\n'.join([f'{dish}: {quantity} —à—Ç. - {dishes[dish]["price"] * quantity} –≥—Ä–Ω.' for dish, quantity in user_carts[user_id].items()])
        message_text = f'–í–º—ñ—Å—Ç –≤–∞—à–æ–≥–æ –∫–æ—à–∏–∫–∞:\n\n{cart_items}\n\nüí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –±–µ–∑ –¥–æ—Å—Ç–∞–≤–∫–∏: {total_price_without_delivery} –≥—Ä–Ω.\nüí∞ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑ –¥–æ—Å—Ç–∞–≤–∫–æ—é: {total_price_with_delivery} –≥—Ä–Ω.'

        bot.send_message(user_id, message_text)

@bot.message_handler(func=lambda message: message.text == 'üóëÔ∏è –û–ø—É—Å—Ç–æ—à–∏—Ç–∏ –∫–æ—à–∏–∫')
def empty_cart(message):
    user_id = message.chat.id
    if user_id in user_carts:
        user_carts[user_id] = {}  # –û–ø—É—Å—Ç–æ—à–∏—Ç–∏ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        bot.send_message(user_id, 'üóëÔ∏è –ö–æ—à–∏–∫ —É—Å–ø—ñ—à–Ω–æ –æ–ø—É—Å—Ç–æ—à–µ–Ω–æ! ', reply_markup=main_markup)
    else:
        bot.send_message(user_id, '–í–∞—à –∫–æ—à–∏–∫ –≤–∂–µ –ø–æ—Ä–æ–∂–Ω—ñ–π.', reply_markup=main_markup)

@bot.callback_query_handler(func=lambda call: call.data in dishes.keys())
def add_to_cart(call):
    selected_dish = call.data
    user_id = call.message.chat.id
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ –º–∞—î –∫–æ—à–∏–∫
    if user_id not in user_carts:
        user_carts[user_id] = {}
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –¥–æ –∫–æ—à–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if selected_dish in user_carts[user_id]:
        user_carts[user_id][selected_dish] += 1
    else:
        user_carts[user_id][selected_dish] = 1
    bot.send_message(user_id, f'‚úÖ –°—Ç—Ä–∞–≤–∞ –¥–æ–¥–∞–Ω–∞ –¥–æ –≤–∞—à–æ–≥–æ –∫–æ—à–∏–∫–∞! \n\n–ù–∞–∑–≤–∞: {selected_dish}')

@bot.message_handler(content_types=['text'])
def handle_text(message):
    if message.text == 'üì¶ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è':
        checkout(message)
    else:
        echo(message)

@bot.message_handler(func=lambda message: True)
def echo(message):
    if message.text == 'üì± –ö–æ–Ω—Ç–∞–∫—Ç–∏':
        bot.send_message(message.chat.id, "üì±–¢–µ–ª–µ—Ñ–æ–Ω–∏ : +380123456789\n+380123456788\n+380123456777\n‚åõÔ∏è –ü—Ä–∏–π–º–∞–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω—å: –ë–µ–∑ –≤–∏—Ö—ñ–¥–Ω–∏—Ö –∑ 22:00 –¥–æ 05:00")
    elif message.text == 'üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.', reply_markup=main_markup)

@bot.message_handler(func=lambda message: message.text == 'üì¶ –û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è')
def checkout(message):
    user_id = message.chat.id
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —á–∏ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–µ –ø–æ—Ä–æ–∂–Ω—ñ–π
    if user_id not in user_carts or not user_carts[user_id]:
        bot.send_message(user_id, '–í–∞—à –∫–æ—à–∏–∫ –ø–æ—Ä–æ–∂–Ω—ñ–π. –î–æ–¥–∞–π—Ç–µ —Ç–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–¥ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.')
        return

    # –ü–æ–ø—Ä–æ—Å–∏—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤–≤–µ—Å—Ç–∏ –∞–¥—Ä–µ—Å—É —Ç–∞ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É
    bot.send_message(user_id, '–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—É:')
    if message.text == 'üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':
        bot.send_message(message.chat.id, '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.', reply_markup=main_markup)
        return
    bot.register_next_step_handler(message, ask_address)

def ask_address(message):
    address = message.text
    
    if address == 'üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':  
        bot.send_message(message.chat.id, '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.', reply_markup=main_markup)
        return
    else:
        keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True)
        reg_button = types.KeyboardButton(text="–ù–∞–¥–∞—Ç–∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É", request_contact=True)
        main_menu_button = types.KeyboardButton('üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é')  # –î–æ–¥–∞–Ω–æ –∫–Ω–æ–ø–∫—É "üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"
        keyboard.add(reg_button, main_menu_button)  # –î–æ–¥–∞–Ω–æ –∫–Ω–æ–ø–∫—É –¥–æ –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏
        
        bot.send_message(message.chat.id, '–ó–∞–ª–∏—à—ñ—Ç—å —Å–≤—ñ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É, —â–æ–± –∑ –≤–∞–º–∏ –∑–≤\'—è–∑–∞–ª–∏—Å—å', reply_markup=keyboard) 

        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –≤–≤–µ–¥–µ–Ω–∞ –∞–¥—Ä–µ—Å–∞ –Ω–µ –ø–æ—Ä–æ–∂–Ω—è
        if address:
            bot.register_next_step_handler(message, confirm_order, address)
        else:
            bot.send_message(message.chat.id, '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ –∞–±–æ –≤–∏–±–µ—Ä—ñ—Ç—å "üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é".')


def confirm_order(message, address):

    phone_number = message.text
    if phone_number == 'üö™ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é':  
        bot.send_message(message.chat.id, '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—å –¥–æ –≥–æ–ª–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é.', reply_markup=main_markup)
        return

    username = message.from_user.username
    if username is None:
        username = message.from_user.first_name  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —ñ–º'—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞, —è–∫—â–æ –Ω—ñ–∫–Ω–µ–π–º –≤—ñ–¥—Å—É—Ç–Ω—ñ–π

    if message.contact:
        phone_number = message.contact.phone_number
        
    user_id = message.chat.id  # –û—Ç—Ä–∏–º—É—î–º–æ ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    if user_id in user_carts:
        user_cart = user_carts[user_id]  # –û—Ç—Ä–∏–º—É—î–º–æ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    else:
        user_cart = {}  # –Ø–∫—â–æ –∫–æ—à–∏–∫–∞ –Ω–µ–º–∞—î, —Å—Ç–≤–æ—Ä—é—î–º–æ –Ω–æ–≤–∏–π –ø—É—Å—Ç–∏–π –∫–æ—à–∏–∫

    current_datetime = datetime.now().strftime("%d/%m/%Y %H:%M:%S")
    delivery_cost = 370  # –í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
    total_price = sum(dishes[dish]['price'] * quantity for dish, quantity in user_cart.items()) + delivery_cost
    message = f'–û—Ç—Ä–∏–º–∞–Ω–æ –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!\n–î–∞—Ç–∞ —Ç–∞ —á–∞—Å: {current_datetime}\n\n–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: {username} (ID: {user_id})\n–ê–¥—Ä–µ—Å–∞: {address}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}\n\n–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è:'
    for dish, quantity in user_cart.items():
        dish_price = dishes[dish]['price']
        message += f'\n{dish}: {quantity} —à—Ç. - {dish_price * quantity} –≥—Ä–Ω.'
    message += f'\n\n–í–∞—Ä—Ç—ñ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_cost} –≥—Ä–Ω.'
    message += f'\n–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –∑ –¥–æ—Å—Ç–∞–≤–∫–æ—é: {total_price} –≥—Ä–Ω.'

    
    url = f'https://api.telegram.org/bot{bot_token}/sendMessage'
    params = {
        'chat_id': channel_id,
        'text': message
    }
    response = requests.post(url, params=params)
    if response.status_code == 200:
        print('–î–∞–Ω—ñ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—ñ –Ω–∞ –∫–∞–Ω–∞–ª!')
    else:
        print('–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—ñ –¥–∞–Ω–∏—Ö –Ω–∞ –∫–∞–Ω–∞–ª.')

    # –û–±—á–∏—Å–ª–µ–Ω–Ω—è –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    total_price = sum(dishes[dish]['price'] * quantity for dish, quantity in user_cart.items())
    # –î–æ–¥–∞–≤–∞–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –¥–æ—Å—Ç–∞–≤–∫–∏
    total_price += 370

    order_text = f'–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!\n\n'
    order_text += '–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n'
    for dish, quantity in user_cart.items():
        dish_price = dishes[dish]['price']
        order_text += f'{dish}: {quantity} —à—Ç. - {dish_price * quantity} –≥—Ä–Ω.\n'
    order_text += f'\n–ê–¥—Ä–µ—Å–∞: {address}\n'
    order_text += f'–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {phone_number}\n'
    order_text += f'–î–æ—Å—Ç–∞–≤–∫–∞: 370 –≥—Ä–Ω.\n'
    order_text += f'–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {total_price} –≥—Ä–Ω.\n'
    order_text += '\n–û—á—ñ–∫—É–π—Ç–µ –Ω–∞—à–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –Ω–∞–π–±–ª–∏–∂—á–∏–º —á–∞—Å–æ–º.\n'
    order_text += '–î—è–∫—É—î–º–æ, —â–æ –æ–±—Ä–∞–ª–∏ –Ω–∞—Å!'


        
    bot.send_message(user_id, order_text, reply_markup=main_markup)
    user_carts[user_id] = {}

if __name__ == '__main__':
    bot.polling()